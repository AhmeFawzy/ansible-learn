---
- name: Deploy node.js artifact on EC2 instance
  hosts: nodejs
  become: yes
  vars_files:
    - project-vars
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install node.js and npm
      apt:
        pkg:
          - nodejs
          - npm

    - name: create new linux user
      user:
        name: "{{linux_name}}"
        comment: New user admin for nodejs app
        group: root
      register: new_user
    - debug: msg={{new_user}}

- name: Deploy node.js artifact on EC2 instance
  hosts: nodejs
  become: True

  vars_files:
    - project-vars
  tasks: 
    - name: Copy node.js artifact to remote host
      copy:
        src:  "{{location}}/nodejs-app-{{version}}.tgz"
        dest: "{{destination}}"

    - name: Create the destination directory
      file:
        path: "{{destination}}/nodejs"
        state: directory

    - name: Extract node.js artifact
      unarchive:
        src: "{{destination}}/nodejs-app-{{version}}.tgz"
        dest: "{{destination}}/nodejs"
        remote_src: yes

    - name: Install dependencies
      npm:
        path: "{{destination}}/nodejs/package"

    - name: Start the node.js application
      command: node "{{destination}}/nodejs/app/server.js"
      async: 1000   #it will allow the app to run on the server even when the terminal is closed
      poll: 0

    - name: Ensure the node.js application is running
      shell: ps aux | grep node    #same as command but command is more secure and shells allows to do do more
      register: app_status         #creates a variable and assign the value from shell to it
    - debug: msg={{app_status.stdout_lines}}
